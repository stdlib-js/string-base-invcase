{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport uppercase from '@stdlib/string-base-uppercase';\nimport lowercase from '@stdlib/string-base-lowercase';\n\n\n// MAIN //\n\n/**\n* Converts a string to inverse case.\n*\n* @param {string} str - string to convert\n* @returns {string} inverse-cased string\n*\n* @example\n* var str = invcase( 'beep' );\n* // returns 'BEEP'\n*\n* @example\n* var str = invcase( 'beep BOOP' );\n* // returns 'BEEP boop'\n*\n* @example\n* var str = invcase( 'isMobile' );\n* // returns 'ISmOBILE'\n*\n* @example\n* var str = invcase( 'HeLlO wOrLd!' );\n* // returns 'hElLo WoRlD!'\n*/\nfunction invcase( str ) {\n\tvar out;\n\tvar ch;\n\tvar s;\n\tvar i;\n\tout = [];\n\tfor ( i = 0; i < str.length; i++ ) {\n\t\tch = str[ i ];\n\t\ts = uppercase( ch );\n\t\tif ( s === ch ) {\n\t\t\ts = lowercase( ch );\n\t\t}\n\t\tout.push( s );\n\t}\n\treturn out.join( '' );\n}\n\n\n// EXPORTS //\n\nexport default invcase;\n"],"names":["invcase","str","out","ch","s","i","length","uppercase","lowercase","push","join"],"mappings":";;gMAkDA,SAASA,EAASC,GACjB,IAAIC,EACAC,EACAC,EACAC,EAEJ,IADAH,EAAM,GACAG,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,IAC5BF,EAAKF,EAAKI,IACVD,EAAIG,EAAWJ,MACJA,IACVC,EAAII,EAAWL,IAEhBD,EAAIO,KAAML,GAEX,OAAOF,EAAIQ,KAAM,GAClB"}